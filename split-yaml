#!/usr/bin/env python3

# import libraries to use
import argparse
import os
import yaml

# create argument parser that makes it easy to define positional, required and optional arguments
# it also has a help functionality and usage message built in
parser = argparse.ArgumentParser(
    description="Split a multi-document YAML file into multiple separate files."
)
parser.add_argument(
    "--rm", help="remove YAML source file after splitting it up", action="store_true"
)
required_args = parser.add_argument_group("required named arguments")
required_args.add_argument(
    "-f", "--file", help="the YAML source file to split up", required=True
)
required_args.add_argument(
    "-k",
    "--key",
    help="the key in each YAML document whose value will be used for the new filename <key-value>.yaml",
    required=True,
)
args = parser.parse_args()

# open source file for reading, automatically closed
# in the end by using the 'with' keyword
with open(args.file, "r") as source_file:

    # loop through all YAML documents contained in source file
    # and create a new file for each of them
    # with the value of the given key as the file name
    for document in yaml.safe_load_all(source_file):
        file_name = document[args.key].lower() + ".yaml"
        with open(file_name, "w") as new_file:
            yaml.dump(document, new_file, sort_keys=False)

# remove YAML source file if --rm flag was specified
if args.rm:
    os.remove(args.file)
